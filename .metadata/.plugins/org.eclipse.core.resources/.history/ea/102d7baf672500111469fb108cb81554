package org.gemsjax.server.communication.channel;

import java.io.IOException;

import org.gemsjax.server.persistence.dao.UserDAO;
import org.gemsjax.server.persistence.dao.hibernate.HibernateUserDAO;
import org.gemsjax.shared.RegExFactory;
import org.gemsjax.shared.communication.CommunicationConnection;
import org.gemsjax.shared.communication.channel.InputChannel;
import org.gemsjax.shared.communication.channel.OutputChannel;
import org.gemsjax.shared.communication.message.Message;

/**
 * This channel listen to incoming system messages as xml with a beginning  &lt sys &gt xml tag
 * @author Hannes Dorfmann
 *
 */
public class UserAuthenticationChannel implements InputChannel, OutputChannel{

	
	private CommunicationConnection communicationConnection;
	private String filterRegEx;
	
	private UserDAO userDAO;
	
		
	public UserAuthenticationChannel(CommunicationConnection connection)
	{
		this.communicationConnection = connection;
		filterRegEx = RegExFactory.startWithTag("sys");
		userDAO = new HibernateUserDAO();
	}
		
		@Override
	public String getFilterRegEx() {
		return filterRegEx;
	}

	@Override
	public void onMessageReceived(String msg) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void send(Message message) throws IOException {
		communicationConnection.send(message.toString());
	}

	@Override
	public void onClose() {
		// TODO Auto-generated method stub
		
	}
		
	
}
