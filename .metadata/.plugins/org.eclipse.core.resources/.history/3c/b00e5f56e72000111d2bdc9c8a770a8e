package org.gemsjax.shared.communication.channel;

import java.io.IOException;

public interface CommunicationConnection {
	
	/**
	 * Closes the connection and also the underlying connection / socket.
	 * Once a CommunicationConnection has been closed, it is not available for further networking use (i.e. can't be reconnected or rebound). 
	 * A new CommunicationConnection needs to be created.
	 * @throws IOException
	 */
	public void close() throws IOException;
	
	
	public boolean isClosed();
	
	/**
	 * Returns the remote port to which this socket is connected.
	 * @return the remote port number to which this socket is connected, or 0 if the socket is not connected yet.
	 */
	public int getPort();
	
	/**
	 * Returns the address of the endpoint this socket is connected to, or null if it is unconnected.
	 * @return a SocketAddress reprensenting the remote endpoint of this socket, or null if it is not connected yet.
	 */
	public String getRemoteAddress();
	
	
	public boolean isConnected();
	
	public boolean setKeepAlive(boolean  keepAlive);
	
	public boolean isKeepAlive();
	
	/**
	 * Transform the object which should be send in a adequate format and send the data
	 * via the underlying socket/connection.
	 * @param o
	 * @throws IOException
	 */
	public void send(Object toSend) throws IOException;
	
	
	
}
